{"version":3,"file":"static/js/645.8eb702ad.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx","services/moviesAPI.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"backBtn\":\"MovieDetails_backBtn__rLQ3F\",\"iconBtn\":\"MovieDetails_iconBtn__7SUMK\",\"backLink\":\"MovieDetails_backLink__dzd-p\",\"movieDescription\":\"MovieDetails_movieDescription__Gu3H0\",\"originalTitle\":\"MovieDetails_originalTitle__B5z98\",\"userScore\":\"MovieDetails_userScore__mU7Se\",\"detailsTitle\":\"MovieDetails_detailsTitle__aL4kz\",\"detailsText\":\"MovieDetails_detailsText__Wpt3d\",\"detailsLink\":\"MovieDetails_detailsLink__DSsAQ\",\"detailsItem\":\"MovieDetails_detailsItem__zRuv1\",\"detailsDescription\":\"MovieDetails_detailsDescription__LA3m1\",\"movieImg\":\"MovieDetails_movieImg__5UJtY\",\"detailsList\":\"MovieDetails_detailsList__c-mmj\"};","import { useState, useEffect } from 'react';\nimport { Link, useParams, useLocation, Outlet } from 'react-router-dom';\nimport { showMoviesDetails } from 'services/moviesAPI';\nimport {BiArrowBack} from \"react-icons/bi\";\n\n\nimport PropTypes from 'prop-types';\nimport style from './MovieDetails.module.css'\n\nconst MovieDetails = () => {\n    const [movieDetails, setMovieDetails] = useState([]);\n    const location = useLocation();\n    const {movieId} = useParams();\n    \n    const {\n        original_title,\n        genres,\n        overview,\n        poster_path,\n        release_date,\n        vote_average,\n    } = movieDetails;\n\n    const backLink = location.state ? location.state.from : '/';\n    const defaultImage ='https://media.istockphoto.com/vectors/no-image-available-icon-vector-id1216251206?b=1&k=20&m=1216251206&s=170667a&w=0&h=z0hxu_BaI_tuMjMneE_APbnx_-R2KGPXgDjdwLw5W7o=';\n    \n    useEffect(() => {\n        showMoviesDetails(movieId).then(details => setMovieDetails(details));\n    },[movieId]);\n\n    return(\n        <div >\n            <Link className={style.backLink} to={backLink}>\n            <button className={style.backBtn} type=\"button\">  <span className={style.iconBtn}>\n                <BiArrowBack/>\n            </span>  \n            GO BACK\n            </button>\n            </Link>\n            <div className={style.movieDescription} >\n                <img src={ poster_path ? `https://image.tmdb.org/t/p/w500/${poster_path}` : defaultImage} \n                alt={original_title}/>\n                <h1 className={style.originalTitle}>{original_title} ({release_date?.slice(0, 4)})</h1>\n                <p className={style.userScore}>User Score: {Math.round(vote_average*10)}%</p>\n                <h2 className={style.detailsTitle}>Overview</h2>\n                <p className={style.detailsText}>{overview}</p>\n                <h2 className={style.detailsTitle}>Genres</h2>\n                <p className={style.detailsText}>{genres?.map(genre => genre.name).join('/')}</p>\n            </div>\n\n            <div className={style.detailsDescription}>\n                <h2 className={style.detailsTitle}>Additional information</h2>\n                <ul className={style.detailsList}>\n                \n                    <li className={style.detailsItem}>\n                    <Link className={style.detailsLink} to=\"cast\" state={{from: backLink}}>Cast</Link>\n                    </li>\n                    <li className={style.detailsItem}>\n                    <Link className={style.detailsLink} to=\"reviews\" state={{from: backLink}}>Reviews</Link>\n                    </li>\n                </ul>\n                <Outlet/>\n            </div>\n        </div>\n\n    )\n}\n\n\nMovieDetails.propTypes = {\n    movieDetails: PropTypes.arrayOf(\n        PropTypes.shape({\n    original_title:PropTypes.string.isRequired,\n    genres:PropTypes.string.isRequired,\n    overview:PropTypes.string.isRequired,\n    poster_path:PropTypes.string,\n    release_date:PropTypes.number.isRequired,\n    vote_average:PropTypes.number.isRequired,\n    }),\n    ),\n};\n\nexport default MovieDetails;","\nimport axios from 'axios';\n\nconst KEY = 'b732e1e1afcd10d94706b0318ae2f23c';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const showPopularMovies = async () => {\n  const response = await axios.get(`${BASE_URL}/trending/movie/day?api_key=${KEY}`);\n  \n  if (response.status !== 200) {\n    throw new Error('Nothing found');\n  }\n\n  return response.data;\n};\n\nexport const showSearchMovies = async (name) => {\n  const response = await axios.get(`${BASE_URL}/search/movie?api_key=${KEY}&page=1&query=${name}`);\n  \n  if (response.status !== 200) {\n    throw new Error('Nothing found');\n  }\n\n  return response.data;\n    \n}\n\nexport const showMoviesDetails = async (movieId) => {\n  const response = await axios.get(`${BASE_URL}/movie/${movieId}?api_key=${KEY}`);\n  \n  if (response.status !== 200) {\n    throw new Error('Nothing found');\n  }\n\n  return response.data;\n}\n\nexport const showMoviesCredits = async (movieId) => {\n  const response = await axios.get(`${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}`);\n  \n  if (response.status !== 200) {\n    throw new Error('Nothing found');\n  }\n\n  return response.data;\n  \n}\n\nexport const showMoviesReviews = async (movieId) => {\n  const response = await axios.get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}`);\n  \n  if (response.status !== 200) {\n    throw new Error('Nothing found');\n  }\n\n  return response.data;\n}\n\n"],"names":["useState","movieDetails","setMovieDetails","location","useLocation","movieId","useParams","original_title","genres","overview","poster_path","release_date","vote_average","backLink","state","from","useEffect","showMoviesDetails","then","details","className","style","to","type","src","alt","slice","Math","round","map","genre","name","join","KEY","BASE_URL","showPopularMovies","axios","response","status","Error","data","showSearchMovies","showMoviesCredits","showMoviesReviews"],"sourceRoot":""}