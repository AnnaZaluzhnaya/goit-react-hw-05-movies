{"version":3,"file":"static/js/76.b53ace63.chunk.js","mappings":"8NACA,GAAgB,SAAW,uBAAuB,SAAW,uBAAuB,SAAW,uBAAuB,cAAgB,4BAA4B,eAAiB,6BAA6B,eAAiB,8B,SC+CjO,EAzCa,WACT,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACOC,GAAWC,EAAAA,EAAAA,MAAXD,QASP,OANAE,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAkBH,GAASI,MAAK,SAAAC,GAAK,OAAIN,EAAQM,EAAMP,WACzD,CAACE,IAIIF,GAAwB,IAAhBA,EAAKQ,QAChB,cAAGC,UAAWC,EAAAA,eAAd,gDAEA,0BACI,eAAID,UAAWC,EAAAA,SAAf,SACKV,GAAQA,EAAKW,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,aAAcC,EAApB,EAAoBA,cAAcC,EAAlC,EAAkCA,KAAKC,EAAvC,EAAuCA,UAAvC,OACd,gBAAIP,UAAWC,EAAAA,SAAf,WACI,gBAAKD,UAAWC,EAAAA,SAAgBO,IAAKJ,EAAY,yCAAqCA,GAftF,uKAgBAK,IAAKJ,KACL,eAAIL,UAAWC,EAAAA,SAAf,SAAgCK,KAChC,eAAGN,UAAWC,EAAAA,cAAd,WAAmC,iBAAMD,UAAWC,EAAAA,eAAjB,yBAAwD,kBAAMM,OAJjEJ,Y,yMCrBlDO,EAAM,mCACNC,EAAW,+BAEJC,EAAiB,mCAAG,oGACRC,IAAAA,IAAA,UAAaF,EAAb,uCAAoDD,IAD5C,UAGP,OAFlBI,EADyB,QAGlBC,OAHkB,sBAIvB,IAAIC,MAAM,iBAJa,gCAOxBF,EAASG,MAPe,2CAAH,qDAUjBC,EAAgB,mCAAG,WAAOZ,GAAP,uFACPO,IAAAA,IAAA,UAAaF,EAAb,iCAA8CD,EAA9C,yBAAkEJ,IAD3D,UAGN,OAFlBQ,EADwB,QAGjBC,OAHiB,sBAItB,IAAIC,MAAM,iBAJY,gCAOvBF,EAASG,MAPc,2CAAH,sDAWhBE,EAAiB,mCAAG,WAAO1B,GAAP,uFACRoB,IAAAA,IAAA,UAAaF,EAAb,kBAA+BlB,EAA/B,oBAAkDiB,IAD1C,UAGP,OAFlBI,EADyB,QAGlBC,OAHkB,sBAIvB,IAAIC,MAAM,iBAJa,gCAOxBF,EAASG,MAPe,2CAAH,sDAUjBrB,EAAiB,mCAAG,WAAOH,GAAP,uFACRoB,IAAAA,IAAA,UAAaF,EAAb,kBAA+BlB,EAA/B,4BAA0DiB,IADlD,UAGP,OAFlBI,EADyB,QAGlBC,OAHkB,sBAIvB,IAAIC,MAAM,iBAJa,gCAOxBF,EAASG,MAPe,2CAAH,sDAWjBG,EAAiB,mCAAG,WAAO3B,GAAP,uFACRoB,IAAAA,IAAA,UAAaF,EAAb,kBAA+BlB,EAA/B,4BAA0DiB,IADlD,UAGP,OAFlBI,EADyB,QAGlBC,OAHkB,sBAIvB,IAAIC,MAAM,iBAJa,gCAOxBF,EAASG,MAPe,2CAAH","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","services/moviesAPI.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"Cast_castList__ARoWn\",\"castItem\":\"Cast_castItem__-Jcfe\",\"castName\":\"Cast_castName__-i08u\",\"castCharacter\":\"Cast_castCharacter__Rliw1\",\"castCharacterS\":\"Cast_castCharacterS__DRhXb\",\"detailsMessage\":\"Cast_detailsMessage__drfT1\"};","import { useState, useEffect } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport { showMoviesCredits } from \"services/moviesAPI\"; \nimport PropTypes from 'prop-types';\nimport style from './Cast.module.css'\n\n\nconst Cast = () => {\n    const [cast, setCast] = useState([]);\n    const {movieId} = useParams();\n    const defaultImage ='https://media.istockphoto.com/vectors/no-image-available-icon-vector-id1216251206?b=1&k=20&m=1216251206&s=170667a&w=0&h=z0hxu_BaI_tuMjMneE_APbnx_-R2KGPXgDjdwLw5W7o=';\n\n    useEffect(() => {\n        showMoviesCredits(movieId).then(movie => setCast(movie.cast))\n    },[movieId]);\n\n    \n\n    return cast && cast.length === 0 ? (\n        <p className={style.detailsMessage}>Sorry, no information about cast.</p>\n        ) : (\n        <div>\n            <ul className={style.castList}>\n                {cast && cast.map(({id, profile_path, original_name,name,character}) => (\n                    <li className={style.castItem} key={id}>\n                        <img className={style.movieImg} src={profile_path ? `https://image.tmdb.org/t/p/w200${profile_path}` : defaultImage} \n                        alt={original_name}/>\n                        <h3 className={style.castName}>{name}</h3>\n                        <p className={style.castCharacter}><span className={style.castCharacterS}>Character:</span><br/>{character}</p>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nCast.propTypes = {\n    cast: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            profile_path: PropTypes.string.isRequired,\n            original_name: PropTypes.string.isRequired,\n            name: PropTypes.string.isRequired,\n            character: PropTypes.string.isRequired,\n        })\n    )\n}\n\nexport default Cast;","\nimport axios from 'axios';\n\nconst KEY = 'b732e1e1afcd10d94706b0318ae2f23c';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const showPopularMovies = async () => {\n  const response = await axios.get(`${BASE_URL}/trending/movie/day?api_key=${KEY}`);\n  \n  if (response.status !== 200) {\n    throw new Error('Nothing found');\n  }\n\n  return response.data;\n};\n\nexport const showSearchMovies = async (name) => {\n  const response = await axios.get(`${BASE_URL}/search/movie?api_key=${KEY}&page=1&query=${name}`);\n  \n  if (response.status !== 200) {\n    throw new Error('Nothing found');\n  }\n\n  return response.data;\n    \n}\n\nexport const showMoviesDetails = async (movieId) => {\n  const response = await axios.get(`${BASE_URL}/movie/${movieId}?api_key=${KEY}`);\n  \n  if (response.status !== 200) {\n    throw new Error('Nothing found');\n  }\n\n  return response.data;\n}\n\nexport const showMoviesCredits = async (movieId) => {\n  const response = await axios.get(`${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}`);\n  \n  if (response.status !== 200) {\n    throw new Error('Nothing found');\n  }\n\n  return response.data;\n  \n}\n\nexport const showMoviesReviews = async (movieId) => {\n  const response = await axios.get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}`);\n  \n  if (response.status !== 200) {\n    throw new Error('Nothing found');\n  }\n\n  return response.data;\n}\n\n"],"names":["useState","cast","setCast","movieId","useParams","useEffect","showMoviesCredits","then","movie","length","className","style","map","id","profile_path","original_name","name","character","src","alt","KEY","BASE_URL","showPopularMovies","axios","response","status","Error","data","showSearchMovies","showMoviesDetails","showMoviesReviews"],"sourceRoot":""}